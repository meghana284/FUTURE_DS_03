import React, { useState, useEffect } from 'react';
import { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';
import { Home, Calendar, CheckCircle, Bell, Clock, List } from 'lucide-react';

// Define global variables for Firebase (not used in this specific app, but required by instructions)
const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';
const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};
const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;

// Custom chart component to combine Bar and Line for "Total Tickets v/s Closed Ticket"
const LineBarChart = ({ data }) => (
  <ResponsiveContainer width="100%" height="100%">
    <BarChart
      data={data}
      margin={{
        top: 20, right: 30, left: 20, bottom: 5,
      }}
    >
      <CartesianGrid strokeDasharray="3 3" vertical={false} stroke="#e0e0e0" /> {/* Lighter grid, no vertical lines */}
      <XAxis dataKey="name" axisLine={false} tickLine={false} /> {/* Hide axis line and tick line */}
      <YAxis axisLine={false} tickLine={false} /> {/* Hide axis line and tick line */}
      <Tooltip cursor={{ fill: 'rgba(0,0,0,0.05)' }} /> {/* Light tooltip background */}
      <Legend iconType="circle" wrapperStyle={{ paddingTop: '10px' }} />
      <Bar dataKey="Total Tickets" fill="#6366F1" radius={[8, 8, 0, 0]} barSize={20} /> {/* Indigo color, rounded top corners */}
      <Line type="monotone" dataKey="Closed Ticket" stroke="#22C55E" strokeWidth={3} dot={{ r: 5, fill: '#22C55E' }} /> {/* Green color, thicker line, larger dots */}
    </BarChart>
  </ResponsiveContainer>
);

function App() {
  // Mock Data for the dashboard
  const totalTicketsChartData = [
    { name: 'Day 1', 'Total Tickets': 100, 'Closed Ticket': 80 },
    { name: 'Day 2', 'Total Tickets': 120, 'Closed Ticket': 90 },
    { name: 'Day 3', 'Total Tickets': 90, 'Closed Ticket': 70 },
    { name: 'Day 4', 'Total Tickets': 150, 'Closed Ticket': 120 },
    { name: 'Day 5', 'Total Tickets': 110, 'Closed Ticket': 85 },
    { name: 'Day 6', 'Total Tickets': 130, 'Closed Ticket': 100 },
    { name: 'Day 7', 'Total Tickets': 160, 'Closed Ticket': 130 },
    { name: 'Day 8', 'Total Tickets': 140, 'Closed Ticket': 110 },
    { name: 'Day 9', 'Total Tickets': 170, 'Closed Ticket': 140 },
    { name: 'Day 10', 'Total Tickets': 115, 'Closed Ticket': 95 },
    { name: 'Day 11', 'Total Tickets': 135, 'Closed Ticket': 105 },
    { name: 'Day 12', 'Total Tickets': 155, 'Closed Ticket': 125 },
    { name: 'Day 13', 'Total Tickets': 105, 'Closed Ticket': 85 },
    { name: 'Day 14', 'Total Tickets': 145, 'Closed Ticket': 115 },
    { name: 'Day 15', 'Total Tickets': 165, 'Closed Ticket': 135 },
    { name: 'Day 16', 'Total Tickets': 125, 'Closed Ticket': 98 },
    { name: 'Day 17', 'Total Tickets': 140, 'Closed Ticket': 112 },
    { name: 'Day 18', 'Total Tickets': 160, 'Closed Ticket': 130 },
    { name: 'Day 19', 'Total Tickets': 110, 'Closed Ticket': 88 },
    { name: 'Day 20', 'Total Tickets': 130, 'Closed Ticket': 104 },
    { name: 'Day 21', 'Total Tickets': 150, 'Closed Ticket': 120 },
    { name: 'Day 22', 'Total Tickets': 100, 'Closed Ticket': 78 },
    { name: 'Day 23', 'Total Tickets': 120, 'Closed Ticket': 96 },
    { name: 'Day 24', 'Total Tickets': 140, 'Closed Ticket': 112 },
    { name: 'Day 25', 'Total Tickets': 95, 'Closed Ticket': 75 },
    { name: 'Day 26', 'Total Tickets': 115, 'Closed Ticket': 92 },
    { name: 'Day 27', 'Total Tickets': 135, 'Closed Ticket': 108 },
    { name: 'Day 28', 'Total Tickets': 155, 'Closed Ticket': 124 },
    { name: 'Day 29', 'Total Tickets': 105, 'Closed Ticket': 84 },
    { name: 'Day 30', 'Total Tickets': 125, 'Closed Ticket': 100 },
  ];

  const sourcewiseData = [
    { name: 'Source 1', value: 400 },
    { name: 'Source 2', value: 300 },
    { name: 'Source 3', value: 200 },
    { name: 'Source 4', value: 100 },
    { name: 'Source 5', value: 150 },
    { name: 'Source 6', value: 250 },
  ];

  // Colors for the Sourcewise Tickets Pie Chart
  const PIE_COLORS = ['#6366F1', '#EC4899', '#F59E0B', '#10B981', '#EF4444', '#3B82F6'];

  const ticketDueTimes = [
    { status: 'Overdue', count: 4 },
    { status: 'Today', count: 6 },
    { status: 'Tomorrow', count: 5 },
    { status: 'This Week', count: 6 },
    { status: 'Next Week', count: 2 },
    { status: 'Later', count: 7 },
  ];

  const openTickets = [
    { priority: 'High', count: 40, color: '#EF4444' }, // Red
    { priority: 'Medium', count: 15, color: '#F59E0B' }, // Amber
    { priority: 'Low', count: 10, color: '#22C55E' }, // Green
  ];

  // Calculate percentages for the summary cards
  const totalTicketsCount = 6852; // From image
  const closedTicketsCount = 6275; // From image
  const closedTicketsPercentage = ((closedTicketsCount / totalTicketsCount) * 100).toFixed(0);
  const totalTicketsPercentage = 100; // Total tickets is always 100% of itself

  return (
    <div className="min-h-screen bg-gray-100 p-4 sm:p-6 lg:p-8 font-inter">
      {/* Tailwind CSS CDN for styling */}
      <script src="https://cdn.tailwindcss.com"></script>
      {/* Google Fonts - Inter */}
      <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet" />

      <style>
        {`
          body {
            font-family: 'Inter', sans-serif;
          }
          .recharts-default-tooltip {
            border-radius: 0.75rem; /* rounded-xl */
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); /* shadow-lg */
            background-color: white !important;
            border: none !important;
          }
          .recharts-tooltip-label {
            font-weight: 600; /* font-semibold */
            margin-bottom: 0.5rem;
          }
          .recharts-tooltip-item {
            font-size: 0.875rem; /* text-sm */
          }
        `}
      </style>

      <h1 className="text-2xl sm:text-3xl font-bold text-gray-800 mb-6 lg:mb-8">Customer service dashboard with ticket resolution</h1>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8">
        {/* Left Column: Tickets Past Due, New Tickets Today, Tickets Closed Today */}
        <div className="lg:col-span-1 space-y-6">
          {/* Tickets Past Due Card */}
          <div className="bg-blue-700 text-white p-6 rounded-xl shadow-lg flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <Bell size={48} className="text-blue-200" /> {/* Changed icon to Bell for 'Past Due' */}
              <div>
                <p className="text-lg font-medium">Tickets Past Due</p>
                <p className="text-5xl font-extrabold">5</p>
              </div>
            </div>
          </div>

          {/* New Tickets Today Card */}
          <div className="bg-blue-700 text-white p-6 rounded-xl shadow-lg flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <Calendar size={48} className="text-blue-200" />
              <div>
                <p className="text-lg font-medium">New Tickets Today</p>
                <p className="text-5xl font-extrabold">661</p>
              </div>
            </div>
          </div>

          {/* Tickets Closed Today Card */}
          <div className="bg-blue-700 text-white p-6 rounded-xl shadow-lg flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <CheckCircle size={48} className="text-blue-200" />
              <div>
                <p className="text-lg font-medium">Tickets Closed Today</p>
                <p className="text-5xl font-extrabold">461</p>
              </div>
            </div>
          </div>
        </div>

        {/* Right Column: Charts and other metrics */}
        <div className="lg:col-span-2 grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8">
          {/* Total Tickets v/s Closed Ticket Chart */}
          <div className="bg-white p-6 rounded-xl shadow-lg md:col-span-2">
            <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4">
              <h2 className="text-xl font-semibold text-gray-800">Total Tickets v/s Closed Ticket</h2>
              <span className="text-sm text-gray-500 mt-2 sm:mt-0">Last 30 Days</span>
            </div>
            <div className="h-64 sm:h-72 lg:h-80">
              <LineBarChart data={totalTicketsChartData} />
            </div>
            <div className="mt-6 grid grid-cols-1 sm:grid-cols-2 gap-4">
              {/* Closed Ticket Summary */}
              <div className="p-4 bg-gray-50 rounded-lg flex flex-col sm:flex-row items-start sm:items-center justify-between">
                <div>
                  <p className="text-gray-600 text-sm">Closed Ticket</p>
                  <p className="text-3xl font-bold text-gray-900">{closedTicketsCount}</p>
                  <p className="text-gray-500 text-xs">Total Tickets</p>
                </div>
                <div className="w-full sm:w-24 h-2 bg-gray-200 rounded-full mt-3 sm:mt-0">
                  <div
                    className="h-full bg-blue-500 rounded-full"
                    style={{ width: `${closedTicketsPercentage}%` }}
                  ></div>
                </div>
                <span className="text-blue-600 font-semibold text-lg ml-2">{closedTicketsPercentage}%</span>
              </div>
              {/* Total Tickets Summary */}
              <div className="p-4 bg-gray-50 rounded-lg flex flex-col sm:flex-row items-start sm:items-center justify-between">
                <div>
                  <p className="text-gray-600 text-sm">Total Tickets</p>
                  <p className="text-3xl font-bold text-gray-900">{totalTicketsCount}</p>
                  <p className="text-gray-500 text-xs">Total Tickets</p>
                </div>
                <div className="w-full sm:w-24 h-2 bg-gray-200 rounded-full mt-3 sm:mt-0">
                  <div
                    className="h-full bg-purple-500 rounded-full"
                    style={{ width: `${totalTicketsPercentage}%` }}
                  ></div>
                </div>
                <span className="text-purple-600 font-semibold text-lg ml-2">{totalTicketsPercentage}%</span>
              </div>
            </div>
          </div>

          {/* Ticket Due Times List */}
          <div className="bg-white p-6 rounded-xl shadow-lg">
            <h2 className="text-xl font-semibold text-gray-800 mb-4">Ticket Due Times</h2>
            <ul className="space-y-3">
              {ticketDueTimes.map((item, index) => (
                <li key={index} className="flex justify-between items-center text-gray-700">
                  <span>{item.status}</span>
                  <span className="bg-gray-200 text-gray-800 text-sm font-semibold px-3 py-1 rounded-full">{item.count}</span>
                </li>
              ))}
            </ul>
          </div>

          {/* Sourcewise Tickets Donut Chart */}
          <div className="bg-white p-6 rounded-xl shadow-lg">
            <h2 className="text-xl font-semibold text-gray-800 mb-4">Sourcewise Tickets</h2>
            <div className="h-64 sm:h-72 flex items-center justify-center">
              <ResponsiveContainer width="100%" height="100%">
                <PieChart>
                  <Pie
                    data={sourcewiseData}
                    cx="50%"
                    cy="50%"
                    innerRadius={60}
                    outerRadius={90} // Slightly larger outer radius
                    fill="#8884d8"
                    paddingAngle={5}
                    dataKey="value"
                    labelLine={false} // Hide label lines
                    label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`} // Show name and percentage
                  >
                    {sourcewiseData.map((entry, index) => (
                      <Cell key={`cell-${index}`} fill={PIE_COLORS[index % PIE_COLORS.length]} />
                    ))}
                  </Pie>
                  <Tooltip />
                  {/* Legend moved to the right by default with Recharts, adjusting wrapperStyle for better positioning */}
                  <Legend layout="vertical" align="right" verticalAlign="middle" wrapperStyle={{ right: -20, top: '50%', transform: 'translateY(-50%)' }} />
                </PieChart>
              </ResponsiveContainer>
            </div>
          </div>

          {/* Open Tickets by Priority */}
          <div className="bg-white p-6 rounded-xl shadow-lg md:col-span-2">
            <h2 className="text-xl font-semibold text-gray-800 mb-4">Open Tickets</h2>
            <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
              {openTickets.map((item, index) => (
                <div key={index} className="flex items-center space-x-4 p-4 rounded-lg border border-gray-200">
                  <div className="w-12 h-12 rounded-full flex items-center justify-center text-white text-xl font-bold" style={{ backgroundColor: item.color }}>
                    {item.count}
                  </div>
                  <p className="text-lg font-medium text-gray-800">{item.priority}</p>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default App;